# numbeer.py

## 숫자는 정수, 부동소수점, 복소수로 나타낸다. 
## 사람은 열손가락을 이용할수있는 십진법을 사용한다. 
## 하지만 컴퓨터는 전자 상태의 신호인 0과 1을 사용한다. # 이진법
## 컴퓨터는 정보를 비트로 표현한다. 


### 정수 

# 파이썬에서 정수는 불변형이다. 
# 파이썬의 정수의 크기는 메모리에의해 제한되며 정수의 크기는 적어도 32비트이다. 
# 정수를 나타내는데 사용하는 바이트 수를 확인 하려면 (정수).bit_length() 를 이용하여 확인하면 된다.  


# 불변형 객체는 변수와 객체 간에 차이가 없다. 


# 확인해보기 
(999).bit_length() 
## >>> 10


# 어떤 문자열을 정수로  변환하거나 , 다른 진법으로 변경하려면 int(문자열, 밑)사용한다. 

s = '11' 
d = int(s)
print(d)
## >>> 11

b = int(s, 2)  # 2-36 사이의 선택적인 인수다. 
print(b)  # s의 해당 숫자의 밑을 벗어 나는 값을 입력(12 같은)하면 벨류에러가 발생한다. 
## >>> 3


### 부동소수점

# 이진수 분수로 표현되기 때문에 함부로 비교하거나 빼면 안된다. 
# float를 이용해 부동소수점을 나타내며 불변형이다.  
# [무시] 단정도(single precision)방식에서 32 비트 부동소수점을 나타낼 때 1비트는 부호(sign) 0,1, 23비트는 유효숫자 자릿수, 8비트는 지수다.
#   
# 단정도 
# 1. 숫자의 절대값을 이진수로 변환 -> 1110110.101
# 2. 이진수를 정규화() -> 1110110.101(2) = 1.110110101(2)*2^6 
# 3. 가수부(23비트)에 넣고 부족한자리는 0으로 채운다. -> 11011010100000000000000
# 4. 지수는 6이므로 바이어스를 더한다. -> 지수 6에 127(0111 1111(2))를 더함 
# => 6(10) + 127(10) = 133(10) = 10000101(2) 


# 부동소수점의 숫자는 메모리에서 비트 패턴으로 비교할 수 있다. 
# 두 숫자가 음수이면, 부호를 뒤집고, 숫자를 반전하여 비교한다. 지수패턴이 같으면 가수를 비교한다. 


### 정수와 부동소수점 

# 파이썬에서 나누기 연산자(/)는 항상 부동소수점을 반환한다.
# 연산자(//) 정수로 반환도 가능은 하다., 연산자(%)는 나머지를 구한다.

# divmod(x,y) => 몫과 나머지를 반환

x = 45
y = 6
divmod(x,y) # x를 y로 나눌 때
## >>> (7, 3)

# round(x,n)
# n 이 음수인 경우 x 를 n 만큼 반올림한 값을 반환 
# n 이 양수인 경우 x 를 소수점 이하 n자리로 반올림한 값을 반환 

## 1
x = 100.96
n = -2
round(x,n) 
## >>> 100.0

## 2
x = 100.96
n = 2
round(x,n) 
## >>> 100.96


## 부동 소수점을 분수로 표현하기
2.75.as_integer_ratio()
## >>> (11,4)


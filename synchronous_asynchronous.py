# 동기식(synchronous)
#     - 요청과 그결과가 동시에 일어나는것 (그 자리에서 결과가 나온다. )
#     - A노드와 B노드 사이의 작업 처리 단위(transaction)를 동시에 맞추겠다.

# 비동기식 (동기식과 반대 개념_asynchronous)
#     - 요청과 결과가 동시에 일어나지 않을거라는 약속
#     - 노드 사이의 작업 처리 단위를 동시에 맞추지 않아도 된다.


# < 동기식과 비동기식 장단점 >
#     - 동기식
#         - 장점 :
#             동기식은 설계가 매우 간단하고 직관적 
#             같은 일을 동시에 진행 
#         - 단점 :
#             결과가 주어질때까지 아무것도 못하고 대기 

#     - 비동기식 
#         - 장점 : 결과가 주어지는데 시간이 걸리더라도 그시간동안 다른작업을 할수있어 자원을 효율적으로 사용가능하다. 
#         - 단점 : 동기보다 복잡
#         - 

# < 동기식과 비동기식 차이 >
# - 노드 사이의 작업 처리 단위를 동시에 맞추지 않아도 된다.
